This document describes the format of the datastructures used internally by (as of yet unreleased) BAT 20.

Because the data can grow quite big (especially when dealing with packages with possibly millons of matches, like the Linux kernel) the data in BAT is kept in two separate data structures:

* unpackreports -- this is a dictionary that keeps metainformation about all the files, like checksums, tags, offsets of filesystems/compressed files contained in the file, names of files that were unpacked from this file, ranges of 'blacklisted' bytes that don't need to be (re)scanned, and so on. The keys of this dictionary are the paths that a file is unpacked to by BAT. Files that are duplicates (same checksum) are tagged as such. This dictionary is at the end of a scan written to a Python pickle called "scandata.pickle".

* leafreports -- this has all the per file specific scan results, such as the matching data, but also the results of other scans. Because of memory constraints this data is kept on disk, not in memory, in a Python pickle file for each checksum. The data is read from disk on a per need basis. The Python pickles (gzip compressed) can be found in the directory "filereports" inside the scan result archive.

Some data is duplicated between the two:

* tags: tags are used by many scans to determine whether or not the scan should be run for the file. To prevent that each scan reads the pickles with the leaf reports the data in tags of the leaf reports is duplicated in the entries for files in unpackreports. In the unpackreports there might be additional tags, such as "duplicate" which are not present in the leaf reports.

Data kept in unpackreports

The following data is packed in each entry for unpackreports:

* name: name of the file
* path: relative directory path inside the unpacked file system or compressed file
* realpath: full directory used during the scan
* magic: output of libmagic. This is dependent on the version of libmagic and the configuration of the host system and is only used for informational purposes, not for any determination, as libmagic only looks at a limited portion of the file.
* tags: list of tags as given to the file by BAT
* size: size of the file in bytes. This field only exists for real files, not for directories, pipes, symbolic links, fifos, device files, and so on.
* sha256: checksum of the file. This only exists for real files, not for directories, pipes, symbolic links, fifos, device files, and so on.
* scans: List of scan results if a file system or compressed file could be found inside. This only exists for real files, not for directories, pipes, symbolic links, fifos, device files, and so on. Each scan result is a dictionary with results.

Data kept in scanresults (unpackreports)

Data kept in leaf reports

The leaf reports are kept in gzip compressed pickle files. These can be found in the directory "filereports" in the scan result archive generated by BAT.

The data is stored as a dictionary. The keys are the names of the scans from the configuration file that was used by BAT during scanning (this might change in the future), as well as the mandatory key "tags". There is no standardized output format for the leaf scans, but it is up to the leaf scans and code that processes the results.

* tags: a list of tags

Data for the architecture scan

* architecture: line of CPU architecture as reported in the "Machine" field in the output of "readelf -h", for example "MIPS R3000"

Data for the kernelmoduleversion scan

Data for the identifier scan

The identifier scan extracts identifiers from a binary. These are later processed by for example the ranking scan. The data is stored as a dictionary (the datastructure has changed compared to BAT 19 and earlier versions).

The first element is a list of string identifiers as extracted by running "strings" on the binary. The second element of the tuple is a dictionary that contains various other symbols than string identifiers. Possible keys of the dictionary are:

* strings: list of string identifiers
* functionnames: a set of function names
* variablenames: a set of variable names
* kernelsymbols: a list of Linux kernel symbols
* kernelfunctions: a list of identifiers extracted and identified as Linux kernel functions
* language: language family that BAT thinks the source code files (that were used to generate the binary) are part of.

Data for the ranking scan

Data used for generating matching piecharts

Data used for generating matching barcharts

Data used for generating ELF linking graphs
