TODO:

file systems:
* FAT
* NTFS

compression:
* rzip
* E00

queueing system:
* let top level script also read from a queue
* add script to add files to and remove files from scanning queue

postrunscans:
* rework code to avoid duplicate processing

aggregate scanning:
* aggregate ranking results for JAR file scanning

GUI:
* rewrite to PyQt to take advantage of better rendering engine (webkit)

error handling:
* better handle errors to give users a better indication if something went wrong

function names:
* generate list of function names and where they were found, optionally with line numbers, for GUI

database creation:
* handle embedded archives (ZIP files, tarballs, etc.)
* handle patches
* extract method names from Java files
* extract constants from Java files
* extract constants from C files
* import licensing information from SPDX files

database:
* split copyright information and licensing information into a separate database. This would give a few more possibilities, like:
  - enabling a lite mode without licensing information, or copyrights
  - easier to regenerating and replace parts of the database
  - easier to keep parts that are used a lot (strings + function names) on SSD, while less used parts (licenses, copyrights) can be kept on a normal disk
