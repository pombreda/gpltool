TODO:

file systems:
* FAT
* NTFS
* ubifs (unubi was removed from mtd-utils)
* more generic YAFFS2 support
* squashfs as described at http://www.devttys0.com/2011/08/extracting-non-standard-squashfs-images/

compression:
* rzip
* E00
* 7z only works if a whole file is compressed with 7z. Rework and test with D-Link firmware DSL-524T_FW_V3.00B01T02.UK-A.20060621.zip
* create workaround for https://bugzilla.redhat.com/show_bug.cgi?id=907442

queueing system:
* let top level script also read from a queue
* add script to add files to and remove files from scanning queue

aggregate scanning:
* cleanup if we used one of the squashfs + lzma variants where we can't determine the size.
* add scan for reporting duplicate files
* add option to remove results for .class files after aggregation in JARs (unless there is cloning or if there are dangling class files)
* report possible whole chain of dependencies for a program

GUI:
* rewrite to PyQt or PySide to take advantage of better rendering engine (webkit)

error handling:
* better handle errors to give users a better indication if something went wrong

function names:
* generate list of function names and where they were found, optionally with line numbers, for GUI

database creation:
* rename batchextractprogramstrings.py
* replace excessive parameter list of batchextractprogramstrings.py with a configuration file
* handle embedded archives (ZIP files, tarballs, etc.)
* handle patches
* import licensing information from SPDX files
* rewrite ctags and xgettext invocations to scan multiple files at once to reduce overhead of calling ctags and xgettext
* create index for sha256 for processed

ranking:
* use version information to report most likely licenses
* report correlation between packages (strings, variable names, function names) to detect cloning in the database
* store info about unique strings more efficiently since often they don't change in between versions. This is to reduce memory usage.
* deal with inner classes properly
* use clonedb information for variable names, field names, and so on

bat-extratools:
* add patches for CVE-2012-4024 for unsquashfs42

busybox scanning:
* clean up finding ranges of applets in extract_configuration. It should be possible to do this less kludgy.

HTML generation:
* finish function name reporting
* clean up/rewrite/make it easier to use
* add license information if available

misc:
* replay script to unpack firmware based on only the pickle with unpacking data
* expand "debug"
* add support for ignoring some file types/extensions completely

BOTTLENECKS:
1. ELF tagging is sometimes incorrect, so LZMA unpacker tries to extract LZMA files in vain from these ELF files, which costs a lot of time.
2. variable name scanning (for C programs) in ranking needs a caching database
3. fix blacklist code in ranking.py, and also copy it to busyboxversion.py and other leaf scans
